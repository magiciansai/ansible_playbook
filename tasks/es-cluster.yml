- name: rm es cluster overlay network
  shell: docker network rm es-network
  ignore_errors: true
  when: inventory_hostname in groups["reader_swarm_managers"]
  run_once: true

- name: create es cluster overlay network
  shell: >-
         docker network create -d overlay es-network
  when: inventory_hostname in groups["reader_swarm_managers"]
  run_once: true

- name: modify es require
  shell: sysctl -w vm.max_map_count=262144

- name: create es container mount dir
  file: 
       path: /docker/es/{{ item[0] }}/{{ item[1] }}
       state: directory
       mode:  0755
  with_nested:
       - [ 'node00', 'node01', 'node02']
       - [ 'data', 'logs', 'config']

- name: copy es config and plugins dir
  copy:
       src: ../files/es/{{item[0]}}
       dest: /docker/es/{{item[1]}}/
  with_nested:
       - [ 'config', 'plugins']
       - [ 'node00', 'node01', 'node02']
       
- name: update node labels.hostname
  shell: docker node update --label-add hostname={{item}} {{hostvars[item]['ansible_hostname']}}
  with_items: "{{ play_hosts }}"
  when: inventory_hostname in groups["reader_swarm_managers"]
  run_once: true

- name: create es master node
  shell: >-
         docker service create --name es-{{item[0]}}-master-{{item[1]}} \
                         --replicas 1 --constraint 'node.labels.hostname == {{item[0]}}' --network es-network \
                         --publish 9200:9200 --publish 9300:9300 \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/data,destination=/usr/share/elasticsearch/data \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/logs,destination=/usr/share/elasticsearch/logs \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/plugins,destination=/usr/share/elasticsearch/plugins \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/config,destination=/usr/share/elasticsearch/config \
                         elasticsearch:5.1.1 elasticsearch \
                         -E cluster.name=es-dev-cluster -E node.master=true -E node.data=true \
                         -E node.name=node-{{item[0]}}-master-{{item[1]}} \
                         -E discovery.zen.ping.unicast.hosts=es-reader_server1-master-00 \
                         -E discovery.zen.ping.unicast.hosts=es-reader_server2-master-00
  with_nested:
      - "{{inventory_hostname}}"
      - ["00"]
  when: inventory_hostname in groups["reader_swarm_managers"]
  run_once: true

- name: create es master node not expose port
  shell: >-
         docker service create --name es-{{item[0]}}-master-{{item[1]}} \
                         --replicas 1 --constraint 'node.labels.hostname == {{item[0]}}' --network es-network \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/data,destination=/usr/share/elasticsearch/data \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/logs,destination=/usr/share/elasticsearch/logs \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/plugins,destination=/usr/share/elasticsearch/plugins \
                         --mount type=bind,src=/docker/es/node{{item[1]}}/config,destination=/usr/share/elasticsearch/config \
                         elasticsearch:5.1.1 elasticsearch \
                         -E cluster.name=es-dev-cluster -E node.master=true -E node.data=true \
                         -E node.name=node-{{item[0]}}-master-{{item[1]}} \
                         -E discovery.zen.ping.unicast.hosts=es-reader_server1-master-00 \
                         -E discovery.zen.ping.unicast.hosts=es-reader_server2-master-00
  with_nested:
      - "{{groups['reader_swarm_workers']}}"
      - ["00"]
  when: inventory_hostname in groups["reader_swarm_managers"]
  run_once: true

- name: create es data nodes
  shell: >-
         docker service create --name es-{{item[0]}}-data-{{item[1]}} \
                 --replicas 1 --constraint 'node.labels.hostname == {{item[0]}}' --network es-network \
                 --mount type=bind,src=/docker/es/node{{item[1]}}/data,destination=/usr/share/elasticsearch/data \
                 --mount type=bind,src=/docker/es/node{{item[1]}}/logs,destination=/usr/share/elasticsearch/logs \
                 --mount type=bind,src=/docker/es/node{{item[1]}}/plugins,destination=/usr/share/elasticsearch/plugins \
                 --mount type=bind,src=/docker/es/node{{item[1]}}/config,destination=/usr/share/elasticsearch/config \
                 elasticsearch:5.1.1 elasticsearch \
                 -E cluster.name=es-dev-cluster -E node.name=node-{{item[0]}}-data-{{item[1]}} -E node.data=true \
                 -E discovery.zen.ping.unicast.hosts=es-reader_server1-master-00 \
                 -E discovery.zen.ping.unicast.hosts=es-reader_server2-master-00
  with_nested:
      - "{{play_hosts}}"
      - ["01", "02"]
  when: inventory_hostname in groups["reader_swarm_managers"]
  run_once: true
